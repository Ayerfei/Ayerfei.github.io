<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ayerfei&#39;s Personal Blog</title>
    <link>http://Ayerfei.github.io/</link>
    <description>Recent content on Ayerfei&#39;s Personal Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Oct 2019 08:54:58 +0800</lastBuildDate>
    
	<atom:link href="http://Ayerfei.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo Quick Start</title>
      <link>http://Ayerfei.github.io/posts/hugo-quick-start/</link>
      <pubDate>Sun, 13 Oct 2019 08:54:58 +0800</pubDate>
      
      <guid>http://Ayerfei.github.io/posts/hugo-quick-start/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Valid Parentheses</title>
      <link>http://Ayerfei.github.io/posts/valid-parentheses/</link>
      <pubDate>Sat, 12 Oct 2019 22:29:56 +0800</pubDate>
      
      <guid>http://Ayerfei.github.io/posts/valid-parentheses/</guid>
      <description>description：
Given a string containing just the characters &#39;(&#39;, &#39;)&#39;, &#39;{&#39;, &#39;}&#39;, &#39;[&#39; and &#39;]&#39;, determine if the input string is valid.
An input string is valid if:
 Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order.  Note that an empty string is also considered valid.
算法：
一、依次扫描括号序列
 若是左括号，则入栈； 若是右括号，则检查栈，栈空则右括号多余，栈不为空则匹配结果；  二、 读完所有括号时，检查栈，若栈空则正确匹配。
使用Python进行解题的好处：
 list自带栈特性，使用append()和pop()方法实现“后进先出”； 当s为空时不进入循环，不用提前判断是否为空，节省判断时间。  solution：</description>
    </item>
    
  </channel>
</rss>